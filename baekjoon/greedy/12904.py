# A와 B

s = input()
t = list(input())

while len(s) < len(t):
  last_char = t[-1]
  t.pop() 

  if last_char == 'B':
    t.reverse()

print(1 if s == ''.join(t) else 0)

# 'A'와 'B' 모두 지우는 연산이 시행되기 때문에, t.pop()을 두 번 작성하고 싶지 않아 조건문 밖 상단에 공통으로 빼는 과정에서 문제가 발생한다.
  # 현재의 마지막 인덱스가 'B'인지 체크한 뒤 reverse()를 수행할지 결정해야 하는데, t.pop()을 조건문 밖으로 빼면서 이미 지워버리기 때문이다.
  # 해결 방법으로 t.pop()을 조건문의 if문과 else문에 각각 작성해주거나, last_char 변수를 사용해서 값을 미리 저장한 후 공통으로 t.pop()을 처리해줄 수 있다.
  # -> 코드의 위치를 바꾸거나 리팩토링을 할 때 항상 관련되는 코드의 실행 순서와 결과를 점검하고 변경하자.
# 마지막 인덱스 값을 t[t.length - 1]로 사용하는 방식보다 t[-1]가 불필요한 연산을 하지 않고 가독성도 더 좋다. (두 방식의 성능 차이는 거의 없다)